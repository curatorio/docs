{"pages":[{"title":"Curator.io","text":"Curator API Docs","tags":"","url":"index.html"},{"title":"Getting Started","text":"This site will help you get started with the Curator.io API. You'll be up and running in a jiffy! Overview The Curator.io API is a RESTfull HTTP API that allows developer to interact with the Curator platform. Only HTTPS is supported for API requests (for privacy and to securely allow transport of API Keys). All requests to the should be to the API server: https:\/\/api.curator.io\/v1 Content-Type All requests must be set to Content-Type: application\/json Content-Type: application\/json","tags":"","url":"Getting_Started\/index.html"},{"title":"Authentication","text":"Each API request requires an API key either as a HTTP Header or included as a query string. You can find your API key in the Curator Dashboard. Your API key has many privileges, be sure to keep it secret! Do not share the key in publicly accessible areas such GitHub, client-side code, and so forth. HTTP Header \/ Basic Auth Provide your API key as the basic auth username value. You do not need to provide a password. GET https:\/\/api.curator.io\/v1\/feeds Authorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l Query string Include the API key as part of the request path in the format ?api_key=API_KEY. GET https:\/\/api.curator.io\/v1\/feeds?api_key=ABCD-1234","tags":"","url":"Getting_Started\/Authentication.html"},{"title":"Response Codes","text":"The common HTTP Response Status Codes are used. Successful Response Successful API queries will return a 200 HTTP Response code Error Responses As much as possible, Curator attempts to use appropriate HTTP status codes to indicate the general class of problem, and this status code is repeated in the code section of the meta response. 400 (Bad Request) Any case where a parameter is invalid, or a required parameter is missing. This includes the case where no OAuth token is provided and the case where a resource ID is specified incorrectly in a path. 403 (Forbidden) The requested information cannot be viewed by the acting user, for example, because they are not friends with the user whose data they are trying to read. 404 (Not Found) Endpoint does not exist. 405 (Method Not Allowed) Attempting to use POST with a GET-only endpoint, or vice-versa. 422 (Unprocessable Entity) The request could not be completed as it is. Use the information included in the response to modify the request and retry. 500 (Internal Server Error) Curator's servers are unhappy. The request is probably valid but needs to be retried later. If the problem persist please contact hello@curator.io Error responses will return JSON a message in the following format. { &quot;success&quot;: false, &quot;message&quot;: &quot;Please provide a feed_id&quot; }","tags":"","url":"Getting_Started\/Response_Codes.html"},{"title":"Feeds","text":"Feeds are used to collect posts across a number of social media networks into a single channel that can be integrated into a widget, displayed on your website, displayed on a digital TV, queried via an API, et cetera, et cetera, and so forth.","tags":"","url":"HTTP_API\/Feeds\/index.html"},{"title":"Create Feed","text":"Creates a Feed POST \/feeds Request POST \/v1\/feeds { &quot;name&quot;: &quot;My feed&quot; } Response { &quot;id&quot;: &quot;315181d5-4f15-40bc-b2a0-0dd196caa13a&quot;, &quot;public_key&quot;: &quot;0b3057fb-80c3-4c0f-8af8-590274dbfbd0&quot;, &quot;moderation&quot;: &quot;post&quot;, &quot;name&quot;: &quot;My feed&quot;, &quot;colour_body_bg&quot;: &quot;#efefef&quot;, &quot;colour_body_text&quot;: &quot;#707070&quot;, &quot;colour_header_bg&quot;: &quot;#efefef&quot;, &quot;colour_header_text&quot;: &quot;#2B2B2B&quot; } Params Param Description Required name Internal name of the Feed Yes","tags":"","url":"HTTP_API\/Feeds\/Create_Feed.html"},{"title":"Update Feed","text":"Update a Feed POST \/feeds\/FEED_ID Request POST \/v1\/feeds\/FEED_ID { &quot;name&quot;: &quot;Default&quot;, &quot;moderation&quot;: &quot;post&quot;, &quot;colour_body_bg&quot;: &quot;#efefef&quot;, &quot;colour_body_text&quot;: &quot;#707070&quot;, &quot;colour_header_bg&quot;: &quot;#efefef&quot;, &quot;colour_header_text&quot;: &quot;#2B2B2B&quot;, } Response { &quot;id&quot;: &quot;705da60d-4479-4696-b49b-29bca98d920d&quot;, &quot;name&quot;: &quot;Default&quot;, &quot;moderation&quot;: &quot;post&quot;, &quot;colour_body_bg&quot;: &quot;#efefef&quot;, &quot;colour_body_text&quot;: &quot;#707070&quot;, &quot;colour_header_bg&quot;: &quot;#efefef&quot;, &quot;colour_header_text&quot;: &quot;#2B2B2B&quot;, &quot;public_key&quot;: &quot;19c614db-c1d1-4111-af53-82f3765a&quot; } Params Param Description FEED_ID Id of Feed to update name Name of feed - only displayed in the admin moderation Moderation the feed will use - post or pre colour_body_bg Body background colour to use for widget colour_body_text Body text color to use for widget colour_header_bg Header background colour to use for widget colour_header_text Header text colour to use for widget","tags":"","url":"HTTP_API\/Feeds\/Update_Feed.html"},{"title":"Delete Feed","text":"Removes a Feed. Note: Deleting a feed will remove all associated sources and posts. DELETE \/feeds\/FEED_ID Request DELETE \/v1\/feeds\/FEED_ID Response { &quot;success&quot;:true, &quot;message&quot;:&quot;Feed deleted&quot; } Params Param Description Required FEED_ID Id of Feed to delete Yes","tags":"","url":"HTTP_API\/Feeds\/Delete_Feed.html"},{"title":"List Feeds","text":"Returns a list of the Feeds GET \/feeds Request GET \/v1\/feeds Response [ { &quot;id&quot;: &quot;660b923a-a6e7-4540-bd03-7e08fd006e0d&quot;, &quot;moderation&quot;: &quot;post&quot;, &quot;name&quot;: &quot;Default&quot;, &quot;colour_body_bg&quot;: &quot;#efefef&quot;, &quot;colour_body_text&quot;: &quot;#707070&quot;, &quot;colour_header_bg&quot;: &quot;#efefef&quot;, &quot;colour_header_text&quot;: &quot;#2B2B2B&quot;, &quot;public_key&quot;: &quot;adfdad0b-88ea-4660-8fc5-6ab02741&quot; } ]","tags":"","url":"HTTP_API\/Feeds\/List_Feeds.html"},{"title":"List Feed Posts","text":"Get collection of Posts for a Feed GET \/feeds\/FEED_ID\/posts Request GET \/v1\/feeds\/FEED_ID\/posts Response The response is a JSON object containing two variables: postCount - the number of posts in the feed posts - an array of Posts { &quot;postCount&quot;: 1, &quot;posts&quot;: [ { &quot;id&quot;: 460, &quot;network_id&quot;: 2, &quot;status&quot;: 1, &quot;flagged&quot;: 0, &quot;has_media&quot;: 0, &quot;source_type&quot;: 4, &quot;source_identifier&quot;: &quot;599710470306835805_672103626&quot;, &quot;source_created_at&quot;: &quot;2013-11-29 07:44:40&quot;, &quot;user_screen_name&quot;: &quot;curator_io&quot;, &quot;user_full_name&quot;: &quot;Curator&quot;, &quot;user_image&quot;: &quot;https:\/\/igcdn-photos-d-a.akamaihd.net\/hphotos-ak-xpf1\/t51.2885-19\/11349140_1632676937008587_1455132383_a.jpg&quot;, &quot;text&quot;: &quot;Deck the halls #Xmas #christmas #decorations #westfield&quot;, &quot;image&quot;: &quot;https:\/\/scontent.cdninstagram.com\/t51.2885-15\/e15\/1171199_638781222826850_457932404_n.jpg?ig_cache_key=NTk5NzEwNDcwMzA2ODM1ODA1.2&quot;, &quot;video&quot;: null, &quot;url&quot;: &quot;https:\/\/www.instagram.com\/p\/hSmX7OuK1d\/&quot;, &quot;userUrl&quot;: &quot;&quot;, &quot;thumbnail&quot;: &quot;&quot;, &quot;video_width&quot;: 0, &quot;video_height&quot;: 0, &quot;network_name&quot;: &quot;Instagram&quot; } ] } Params Param Description FEED_ID Feed API Key or Feed Public Key Optional Params Param Description limit Limits the number of posts returned - defaults to 25, max is 100 offset Page offset - used to paginate through the results network_id Filter by specific Network ID source_type Filter by specific Source Type ID status Filter by specific Post status","tags":"","url":"HTTP_API\/Feeds\/List_Feed_Posts.html"},{"title":"Sources","text":"Sources define what Posts should be pulled into a particular Feed. A Source is made up of a source_type (eg Instagram Tag) and a value (called tag) that's used to query the source type. Source Types source_type Description 1 Twitter Tag 2 Instagram tag 3 Twitter user 4 Instagram user 5 Facebook page 6 Vine tag 7 Pinterest user 8 Google+ tag 9 Flickr tag 10 Youtube tag 11 Tumblr tag 12 Google+ user 13 Youtube channel 14 Tumblr user 15 Flickr user 16 Rss 17 LinkedIn User 18 LinkedIn Page","tags":"","url":"HTTP_API\/Sources\/index.html"},{"title":"Create Source","text":"This end point creates a Source for a Feed. When a source is created the platform will request the latest 20 posts from the source. The example below creates a source that pulls in Instagram posts with the hashtag #nofilter. POST \/sources Request POST \/v1\/sources { &quot;feed_id&quot;: &quot;660b923a-a6e7-4540-bd03-7e08fd006e0d&quot; &quot;source_id&quot;:2, &quot;tag&quot;:&quot;nofilter&quot; } Response { &quot;id&quot;: &quot;b37d3706-7fbd-4af9-a989-e8d20a50e04e&quot;, &quot;source_type&quot;: 2, &quot;tag&quot;: &quot;nofilter&quot;, &quot;status&quot;: 1, &quot;feed_id&quot;: &quot;660b923a-a6e7-4540-bd03-7e08fd006e0d&quot; } Params Param Description Required feed_id Feed to assign source to Yes source_id Source Type to to pull posts from. See Source Types below Yes tag Value to query source Yes Source Types source_type Description 1 Twitter Tag 2 Instagram tag 3 Twitter user 4 Instagram user 5 Facebook page 6 Vine tag 7 Pinterest user 8 Google+ tag 9 Flickr tag 10 Youtube tag 11 Tumblr tag 12 Google+ user 13 Youtube channel 14 Tumblr user 15 Flickr user 16 Rss 17 LinkedIn User 18 LinkedIn Page","tags":"","url":"HTTP_API\/Sources\/Create Source.html"},{"title":"Update Source","text":"Updates a Source. Note: Once created a Sources feed_id and source_type can not be modified. PUT \/sources\/SOURCE_ID Request PUT \/v1\/sources\/SOURCE_ID { &quot;tag&quot;: &quot;curator_io&quot; } Response { &quot;id&quot;: &quot;1301a1f9-4982-4101-8a2f-2bd4d98db41a&quot;, &quot;feed_id&quot;: &quot;660b923a-a6e7-4540-bd03-7e08fd006e0d&quot;, &quot;source_type&quot;: 4, &quot;tag&quot;: &quot;curator_io&quot;, &quot;status&quot;: 1, &quot;initialised&quot;: 0, &quot;error_count&quot;: 0 } Params Param Description Required SOURCE_ID Id of Source to update Yes tag Value to use when querying source Yes","tags":"","url":"HTTP_API\/Sources\/Update_Source.html"},{"title":"Delete Source","text":"Delete a source. Note: Deleting a source will delete all the associated posts. DELETE \/sources\/SOURCE_ID Request DELETE \/v1\/sources\/SOURCE_ID Response { &quot;success&quot;:true, &quot;message&quot;:&quot;Source deleted&quot; } Params Param Description Required SOURCE_ID Id of Source to delete Yes","tags":"","url":"HTTP_API\/Sources\/Delete_Source.html"},{"title":"List Sources","text":"This endpoint lists all sources. GET \/sources Request GET \/v1\/sources Response [ { &quot;id&quot;: &quot;d7de2fb2-a272-4c75-9e0a-ac9e89aee2b3&quot;, &quot;feed_id&quot;: &quot;660b923a-a6e7-4540-bd03-7e08fd006e0d&quot;, &quot;source_type&quot;: 4, &quot;tag&quot;: &quot;curator_io&quot;, &quot;status&quot;: 1, &quot;initialised&quot;: 1, &quot;error_count&quot;: 0, &quot;feed&quot;: { &quot;id&quot;: &quot;660b923a-a6e7-4540-bd03-7e08fd006e0d&quot;, &quot;moderation&quot;: &quot;post&quot;, &quot;name&quot;: &quot;Default&quot;, &quot;colour_body_bg&quot;: &quot;#efefef&quot;, &quot;colour_body_text&quot;: &quot;#707070&quot;, &quot;colour_header_bg&quot;: &quot;#efefef&quot;, &quot;colour_header_text&quot;: &quot;#2B2B2B&quot;, &quot;public_key&quot;: &quot;adfdad0b-88ea-4660-8fc5-6ab02741&quot; } } ] Params Param Description Required feed_id Show sources for a particular Feed No","tags":"","url":"HTTP_API\/Sources\/List_Sources.html"}]}